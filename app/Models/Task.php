<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Casts\Attribute;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\DB;
use League\CommonMark\Extension\Attributes\Node\Attributes;

class Task extends Model
{
    use HasFactory;

    protected $fillable = ['title','dueDate','description','group_id','subject_id','return'];

    public function save(array $options = [])
    {
        if(!isset($this->user_id)){
            $this->user_id = auth()->user()->id;
        }
        return parent::save($options); // TODO: Change the autogenerated stub
    }

    public function group()
    {
        return $this->belongsTo(Group::class);
    }

    public function subject()
    {
        return $this->belongsTo(Subject::class);
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function isDone():Attribute
    {
        return  Attribute::make(
            get : fn() => auth()->user()->tasksDone()->where('task_id',$this->id)->count()>0,
        );
    }

    public function toggleIsDone()
    {
        if($this->isDone){
            DB::table('task_user')
                ->where('user_id',\auth()->user()->id)
                ->where('task_id',$this->id)
                ->delete();
        }else{
            DB::table('task_user')
                ->insert(['task_id'=>$this->id,'user_id'=>auth()->user()->id]);
        }
    }


}
